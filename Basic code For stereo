import numpy as np
import cv2
from matplotlib import pyplot as plt
from matplotlib import patches
img_left = cv2.imread('r.png',1)
img_right = cv2.imread('left.png',1)

img_left=cv2.resize(img_left, (480 , 480))
img_right=cv2.resize(img_right, (480 , 480))
# Parameters
    num_disparities = 2*16
    block_size = 11
    
    min_disparity = 0
    window_size = 6
    
    img_left = cv2.cvtColor(img_left, cv2.COLOR_BGR2GRAY)
    img_right = cv2.cvtColor(img_right, cv2.COLOR_BGR2GRAY)

    
    # Stereo BM matcher
    left_matcher_BM = cv2.StereoBM_create(
        numDisparities=num_disparities,
        blockSize=block_size
    )

    # Stereo SGBM matcher
    left_matcher_SGBM = cv2.StereoSGBM_create(
        minDisparity=min_disparity,
        numDisparities=num_disparities,
        blockSize=block_size,
        P1=8 * 3 * window_size ** 2,
        P2=32 * 3 * window_size ** 2,
        mode=cv2.STEREO_SGBM_MODE_SGBM_3WAY
    )

    # Compute the left disparity map
    disp_left = left_matcher_SGBM.compute(img_left, img_right).astype(np.float32)/16
    
    
    plt.figure(figsize=(10, 10))
    plt.imshow(disp_left)
    plt.show()
    
    
    
    //While implementing on hardware, we need to substitute for the StereoSGBM_create function. 
    This is not middlebury standard,just a basic code,to get things going. :p
    
